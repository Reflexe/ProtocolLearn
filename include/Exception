/**
 * @file exception.h
 * @author shrek0 (shrek0.tk@gmail.com)
 * @class exception
 * @section LICENSE
 *
 * ProtocolLearn copyright (C) 2015 shrek0
 *
 * ProtocolLearn is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ProtocolLearn is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @section DESCRIPTION
 * Contains commoon excptions classes.
 */

#ifndef EXCEPTION_H
#define EXCEPTION_H

#include <globals.h>

#include <exception>
#include <string>

namespace ProtocolLearn {

class Exception : public std::exception
{
public:
    Exception(const std::string &exceptionName, const std::string &errorMessage) throw()
    {
        this->errorMessage = exceptionName + ": " + errorMessage;
    }

    ~Exception() throw(){ }

    virtual const char *what() const noexcept(true) override
    {
        return errorMessage.c_str();
    }

private:
    std::string errorMessage;
};

class NoEnoughMemoryException : public Exception
{
public:
    NoEnoughMemoryException(const char *errorMessage)
        : Exception(std::string("NoEnoughMemoryException"), std::string(errorMessage)) { }
};

class ParseErrorException : public Exception
{
public:
    ParseErrorException(const char *errorMessage)
        : Exception(std::string("ParseErrorException"), std::string(errorMessage)) { }
};

class InvalidArgument : public Exception
{
public:
    InvalidArgument(const char *errorMessage)
        : Exception(std::string("InvalidArgument"), std::string(errorMessage)) { }
};

} // ProtocolLearn

#endif // EXCEPTION_H
